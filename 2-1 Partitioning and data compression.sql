USE [WideWorldImporters]
GO

-- Lets estimate the compression savings for the clustered index using both compression levels

EXEC sp_estimate_data_compression_savings 'Sales', 'Orders', 1, NULL, 'ROW' ;
GO
EXEC sp_estimate_data_compression_savings 'Sales', 'Orders', 1, NULL, 'PAGE' ;
GO

-- Which compression level should I use for the clustered index?

-- Lets see IO generated by each level of compression

-- How much IO is generated if the tables is read completly without compression?

SET STATISTICS IO ON
SELECT * FROM [Sales].[P_Orders]

-- You get around 1500 logical reads (if you completed previous demos) 

-- How much IO is generated if the tables is read completly using ROW compression?

alter index [PK_Sales_P_Orders] on [Sales].[P_Orders] 
REBUILD with (data_compression = ROW)

SELECT * FROM [Sales].[P_Orders]

-- You get around 1135 logical reads (if you completed previous demos) 

-- How much IO is generated if the tables is read completly using PAGE compression?

alter index [PK_Sales_P_Orders] on [Sales].[P_Orders] 
REBUILD with (data_compression = PAGE)

SELECT * FROM [Sales].[P_Orders]
-- You get around 839 logical reads (if you completed previous demos) 


-- To continue with the demo, lets uncompress the table first
alter index [PK_Sales_P_Orders] on [Sales].[P_Orders] 
REBUILD with (data_compression = NONE)


-- You should you the same analysis for each Index and select the best compression level for it

EXEC sp_estimate_data_compression_savings 'Sales', 'P_Orders', 2, NULL, 'ROW' ;
GO
EXEC sp_estimate_data_compression_savings 'Sales', 'P_Orders', 2, NULL, 'PAGE' ;
GO

-- Which compression level should I use for the index_id = 2?

-- Lets compress some specific partitions of index_id=1
alter index [PK_Sales_P_Orders]  on [Sales].[P_Orders] 
REBUILD PARTITION=2 with (data_compression = ROW)
go
alter index [PK_Sales_P_Orders] on [Sales].[P_Orders] 
REBUILD PARTITION=3 with (data_compression = PAGE)
go

-- Execute Query 1 on "1-A Scripts verificacion.sql" and take
-- a look of compression_level column. Notice that you can have
-- different compression level on different partitoins on the same index

-- Execute Query 3 on "1-A Scripts verificacion.sql" and take
-- a look of compression_level column 
-- Notice that the same partition for different indexes can have
-- different compression level

-- You can also compress several partitions of index_id=1 at once
alter index [PK_Sales_P_Orders]  on [Sales].[P_Orders] 
REBUILD PARTITION = ALL with (data_compression = PAGE ON PARTITIONS (2 to 40))


-- Execute Query 1 on "1-A Scripts verificacion.sql" and take
-- a look of compression_level column to see the final state of the index_id = 1
